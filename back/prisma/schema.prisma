generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Task {
  id            Int                @id @default(autoincrement())
  title         String
  description   String
  done          Boolean            @default(false)
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  userId        Int
  projectId     Int
  project       Project            @relation(fields: [projectId], references: [id])
  user          User               @relation(fields: [userId], references: [id])
  collaborators TaskCollaborator[]

  @@index([projectId], map: "Task_projectId_fkey")
  @@index([userId], map: "Task_userId_fkey")
}

model Project {
  id            Int                   @id @default(autoincrement())
  title         String
  description   String
  userId        Int
  createdAt     DateTime              @default(now())
  updatedAt     DateTime              @updatedAt
  user          User                  @relation(fields: [userId], references: [id])
  collaborators ProjectCollaborator[]
  tasks         Task[]

  @@index([userId], map: "Project_userId_fkey")
}

model User {
  id                  Int                   @id @default(autoincrement())
  name                String?
  password            String
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  mail                String                @unique
  projects            Project[]
  projectsColaborator ProjectCollaborator[]
  tasks               Task[]
  tasksColaborator    TaskCollaborator[]
}

model ProjectCollaborator {
  id        Int      @id @default(autoincrement())
  projectId Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  project   Project  @relation(fields: [projectId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@index([projectId], map: "ProjectColaborator_projectId_fkey")
  @@index([userId], map: "ProjectColaborator_userId_fkey")
}

model TaskCollaborator {
  id        Int      @id @default(autoincrement())
  taskId    Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  task      Task     @relation(fields: [taskId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@index([taskId], map: "TaskColaborator_taskId_fkey")
  @@index([userId], map: "TaskColaborator_userId_fkey")
}
